IBM: PY0101EN
Python for Data Science

It’s also interactive, object-oriented - Python 3

- first module: types, expressions, variables, strings and string operations.
- second :data structures, namely lists and tuples, sets and dictionaries.
Lists and tuples, are called compound data types and are one of the key types of data
structures in Python. Sets and dictionaries are types of collections.
- In the 3rd module we'll cover Python programming fundamentals, including conditions, branching,
loops, functions, and objects and classes. Specifically, you’ll learn about comparison
and logic operators, and the if, else, and elif statements, for and while loops, how
to use some of Python’s built-in functions, as well as how build your own functions, and
how to create objects and classes using object constructors and attributes.
- And finally, in the 4th module we'll show you how to work with data in Python.
Specifically, how to read and write with the open method, and how to load, work with, and
save data in pandas. 

 A statement or expression is an instruction
the computer will run or execute. 
The value in the parentheses is called the
argument.
If you are using a Jupiter notebook in this
course, you will see a small rectangle with the statement.
This is called a cell. 

11 - int
21.213 - float
"hello" - str
true - boolean

true - 1
False - 0
type("str")

type casting
float(2)
int(1.1)

operands 56 78569 46 78
operators  *- - /- // +

variables
my_variable = 1


Strings are sequences and, as such, have apply
methods that work on lists and tuples. Strings also have a second set of methods
that just work on strings. 

the method upper.
This method converts lower case characters to upper case characters.

MODULE 2

Tuples are an ordered sequence.
Here is a Tuple “Ratings.”
Tuples are expressed as comma-separated elements within parentheses.
These are values inside the parentheses.
Tuple[1]

TUPLE
A = (0,1,2,3)
print(A)

Lists are also an ordered sequence.
Here is a list L. A list is represented with square brackets.
In many respects lists are like tuples, one key difference is they are mutable.

LIST
B=["a","b","c"]


Sets are a type of collection. This means that like lists and tuples, you
can input different python types. Unlike lists and tuples they are unordered.
This means sets do not record element position. Sets only have unique elements.
This means there is only one of a particular element in a set.


Dictionaries are a type of collection in Python.
If you recall, a list has integer indexes. These are like addresses.
A list also has elements. A dictionary has keys and values.
The key is analogous to the index, they are like addresses but they don’t have to be
integers. They are usually characters; the values are
similar to the elements in a list and contain information.